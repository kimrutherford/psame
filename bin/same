#!/usr/bin/perl -w

use strict;

use Text::Same;
use Text::Same::TextUI qw( draw_match );

use Getopt::Std;

my %command_line_options = ();
getopts('viBbVynx:M:', \%command_line_options);

# set defaults
my %options = (side_by_side => 1);

$options{ignore_case} = $command_line_options{i};
$options{ignore_blanks} = $command_line_options{B};
$options{ignore_space} = $command_line_options{b};
$options{side_by_side} = 0 if defined $command_line_options{V};
$options{side_by_side} = 1 if defined $command_line_options{y};
$options{term_width} = $command_line_options{x};
$options{min_score} = $command_line_options{M};
$options{non_matches} = $command_line_options{n};

if (@ARGV != 2) {
  die <<USAGE;
usage: $0 [-b] [-B] [-i] [-y] [-V] file1 file2

options:
   -b ignore changes in whitespace
   -i ignore case
   -B ignore blank lines
   -y side-by-side match view (default)
   -V vertical match view
   -x terminal width in columns
   -n show non-matches instead
USAGE
}

if (!defined $options{term_width}) {
  $options{term_width} = eval "require Term::Size; Term::Size::chars()";

  if ($@ or $options{term_width} == 0) {
    # pick a default
    $options{term_width} = 80;
  }
}

my $matchmap = compare(\%options, $ARGV[0], $ARGV[1]);

if ($options{non_matches}) {
  my @source1_non_matches = $matchmap->source1_non_matches;
  my @source2_non_matches = $matchmap->source2_non_matches;
} else {
  my @matches = $matchmap->matches;

  for my $match (@matches) {
    if (!defined $options{min_score} or $match->score >= $options{min_score}) {
      print draw_match(\%options, $match);
    }
  }
}
